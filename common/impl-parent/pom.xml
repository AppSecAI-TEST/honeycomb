<?xml version="1.0" encoding="UTF-8"?>
<!-- vi: set et smarttab sw=4 tabstop=4: -->
<!--
 Copyright (c) 2015 Cisco and/or its affiliates.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at:

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.opendaylight.controller</groupId>
    <artifactId>config-parent</artifactId>
    <version>0.4.2-Beryllium-SR2</version>
    <relativePath/>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>io.fd.honeycomb.common</groupId>
  <artifactId>impl-parent</artifactId>
  <version>1.16.12-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <checkstyle.header.file>APACHE_HEADER.txt</checkstyle.header.file>
    <nexusproxy>http://nexus.fd.io/content</nexusproxy>
    <guice.version>4.1.0</guice.version>
    <guice.config.version>1.2.0</guice.config.version>
    <mdsal.controller.version>1.3.2-Beryllium-SR2</mdsal.controller.version>
    <mdsal.version>2.0.2-Beryllium-SR2</mdsal.version>
    <netconf.version>1.0.2-Beryllium-SR2</netconf.version>
    <skinny.logback.version>1.0.8</skinny.logback.version>
    <hamcrest.version>1.3</hamcrest.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.opendaylight.controller</groupId>
        <artifactId>mdsal-artifacts</artifactId>
        <version>${mdsal.controller.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.opendaylight.mdsal</groupId>
        <artifactId>mdsal-artifacts</artifactId>
        <version>${mdsal.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.opendaylight.netconf</groupId>
        <artifactId>netconf-artifacts</artifactId>
        <version>${netconf.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- DI -->
      <dependency>
        <groupId>com.google.inject</groupId>
        <artifactId>guice</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>net.jmob</groupId>
        <artifactId>guice.conf</artifactId>
        <version>${guice.config.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-multibindings</artifactId>
        <version>${guice.version}</version>
      </dependency>
      <dependency>
        <groupId>org.skinny-framework</groupId>
        <artifactId>skinny-logback</artifactId>
        <version>${skinny.logback.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.inject.extensions</groupId>
        <artifactId>guice-testlib</artifactId>
        <version>${guice.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <configuration>
            <!-- Override checkstyle configuration to fit Honeycomb coding style-->
            <configLocation>honeycomb-checkstyle.xml</configLocation>
            <includeTestResources>true</includeTestResources>
            <!--TODO HONEYCOMB-155 enable fail on violation after issues are resolved + set in as errors in checkstyle xml-->
          </configuration>
          <executions>

            <!-- Override license check configuration to fit Honeycomb coding style-->
            <execution>
              <id>check-license</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <headerLocation>HONEYCOMB_LICENSE.txt</headerLocation>
                <failOnViolation>true</failOnViolation>
                <failsOnError>true</failsOnError>
                <outputFile>${project.build.directory}/checkstyle-license-result.xml</outputFile>
              </configuration>
            </execution>

            <!-- Add logging checks from yangtools -->
            <execution>
              <id>check-logging</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <failOnViolation>true</failOnViolation>
                <configLocation>honeycomb-checkstyle-logging.xml</configLocation>
                <consoleOutput>true</consoleOutput>
                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                <sourceDirectory>${project.basedir}</sourceDirectory>
                <includes>**\/*.java,**\/*.xml,**\/*.ini,**\/*.sh,**\/*.bat,**\/*.yang</includes>
                <excludes>**\/target\/,**\/bin\/,**\/target-ide\/,**\/src/main/yang-gen-config\/,**\/src/main/yang-gen-sal\/,**\/src/main/xtend-gen\/,**\/src/main/yang\/</excludes>
                <outputFile>${project.build.directory}/checkstyle-logging-result.xml</outputFile>
              </configuration>
            </execution>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>io.fd.honeycomb.common</groupId>
              <artifactId>honeycomb-checkstyle</artifactId>
              <!-- Hardcoded version to prevent archetype generated projects to use their own project version -->
              <version>1.16.12-SNAPSHOT</version>
            </dependency>
            <!-- Necessary for logging checks -->
            <dependency>
              <groupId>org.opendaylight.yangtools</groupId>
              <artifactId>checkstyle-logging</artifactId>
              <version>${yangtools.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <!-- Deactivate strict java8 checks -->
        <!-- TODO HONEYCOMB-156 fix all the javadoc offenders of doclint -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <configuration>
            <additionalparam>-Xdoclint:none</additionalparam>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <execution>
            <id>unpack-license</id>
            <phase>none</phase>
            <goals><goal>unpack</goal></goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!-- Use google's error-prone static analysis-->
          <compilerId>javac-with-errorprone</compilerId>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
          <showWarnings>true</showWarnings>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-compiler-javac-errorprone</artifactId>
            <version>2.5</version>
          </dependency>
          <!-- override plexus-compiler-javac-errorprone's dependency on
               Error Prone with the latest version -->
          <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_core</artifactId>
            <version>2.0.9</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>


  <distributionManagement>
    <repository>
      <id>fdio-release</id>
      <url>${nexusproxy}/repositories/fd.io.release/</url>
    </repository>
    <snapshotRepository>
      <id>fdio-snapshot</id>
      <url>${nexusproxy}/repositories/fd.io.snapshot/</url>
    </snapshotRepository>
  </distributionManagement>
</project>
